{"version":3,"sources":["Services/Services.js","Config/Config.js","Components/SignIn.js","Components/Signup.js","Redux/Slices/UserDetailsSlice.js","Components/UserProfile.js","Components/Home.js","Components/NewPoll.js","Components/Poll.js","App.js","Redux/Store.js","index.js"],"names":["emailRegex","getCookies","document","cookie","length","Map","cookieStrs","split","cookies","cookieComps","forEach","cookieStr","set","trim","apiBaseUrl","getTokenApiUrl","errorMessages","displayErrorMessages","errorWord","errors","i","push","className","SignIn","useState","setErrorWord","history","useHistory","has","replace","console","log","onSubmit","event","preventDefault","user","email","getElementById","value","pss","userDetails","search","validateDetails","fetch","method","headers","credentials","body","JSON","stringify","then","resp","status","Error","json","data","success","code","catch","err","loginUser","type","id","placeholder","to","signupUrl","SignUp","createUserAccount","userDetailsSlice","createSlice","name","initialState","username","bdate","day","month","year","followers","following","initialized","profilePic","polls","reducers","setUserDetails","state","action","payload","profilePicUrl","setProfilePicture","setPolls","splice","userPolls","poll","actions","getUserDetailsApiUrl","editUserDetailsApiUrl","getDaysInMonth","daysOptions","daysInMonth","Date","getDate","loadUserData","dispatch","bday","bmonth","byear","picUrl","alert","UserProfile","useSelector","useDispatch","days","setDays","showLoadingSpinner","setShowLoadingSpinner","setProfilePicUrl","useEffect","dateChanged","parseInt","style","alignSelf","onClick","color","src","alt","accept","onChange","e","target","files","URL","createObjectURL","setUserProfilePic","oldDetails","picInput","validateUserDetails","formData","FormData","append","updatedDetails","updateUserData","for","defaultValue","map","monthName","index","years","currYear","getFullYear","getYears","getUserPollsApiUrl","signOutApiUrl","SideBar","signoutUser","TopBar","props","flexBasis","flexGrow","ContentList","title","children","UserPollsTable","borderRight","pollDetails","votes","displayPollDetails","Home","loadUserPolls","newOptionId","createNewPollApiUrl","pollCreationSemaphore","NewPollOption","option","txt","options","setOptions","newOptions","opt","deleteOption","size","getErrorMessages","NewPoll","pollId","resStatus","setResStatus","addNewOption","opts","setResStaus","newPoll","optionTxt","nonEmptyOptions","validatePollDetails","finally","createNewPoll","margin","getPollApiBaseUrl","addVoteApiUrl","voted","undefined","PollGraph","graphColors","totalVotes","Math","max","percentage","getBarStyle","backgroundColor","display","textAlign","floor","marginTop","whiteSpace","overflow","textOverflow","copyShareableLink","pageUrl","window","location","href","el","createElement","appendChild","select","execCommand","removeChild","Poll","useParams","setPoll","requestUrl","userVoted","getPoll","class","disabled","voteId","App","exact","path","store","configureStore","reducer","UserDetailsReducer","ReactDOM","render","StrictMode","Store"],"mappings":"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","file":"static/js/main.55655bff.chunk.js","sourcesContent":["\r\n/*****************************Imports********************/\r\n\r\n/*****************************Variables********************/\r\nconst emailRegex = /[\\w]+['@'][a-zA-z]{2,}['.'][a-z]{2,3}/g; //The regex for checking if the email is valid\r\n\r\n/*****************************Functions********************/\r\nfunction getCookies()\r\n{\r\n    /*Returns an object containing the set cookies*/\r\n\r\n    if(document.cookie.length === 0)\r\n        return new Map();\r\n\r\n    const cookieStrs = document.cookie.split(';'); //Getting cookies list\r\n\r\n    const cookies = new Map();\r\n    let cookieComps = [];\r\n    cookieStrs.forEach((cookieStr) => {\r\n        cookieComps = cookieStr.split('=');\r\n        cookies.set(cookieComps[0].trim(), cookieComps[1].trim());\r\n    });\r\n\r\n    return cookies;\r\n}\r\n\r\n/*****************************Exports********************/\r\nexport {emailRegex, getCookies};","\r\n/*******************************Imports************************** */\r\n\r\n/*******************************Variables************************** */\r\nconst apiBaseUrl = \"https://quiz-poll-app.herokuapp.com\";\r\n\r\n/*******************************Exports************************** */\r\nexport {apiBaseUrl};\r\n","\r\n/*************************Imports*********************** */\r\nimport { useState } from \"react\";\r\nimport { emailRegex, getCookies } from \"../Services/Services\";\r\nimport {apiBaseUrl} from \"../Config/Config\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n/*************************Variables*********************** */\r\nconst getTokenApiUrl = `${apiBaseUrl}/auth/signin`; //The api url to get user access token\r\nconst errorMessages = [\"Invalid email\", \"Invalid password\", \"User not found\", \"Incorrect Password\", \"Failed to login. Try again\"]; //The possible error messages to be displayed\r\n\r\n/*************************Component*********************** */\r\nfunction SignIn()\r\n{\r\n    const [errorWord, setErrorWord] = useState(0);\r\n    const history = useHistory();\r\n\r\n    //Checking if the user is already signed in\r\n    const setCookies = getCookies();\r\n    if(setCookies.has(\"auth\"))\r\n    {\r\n        //Redirecting to home page\r\n        history.replace(\"/\");\r\n        return null;\r\n    }\r\n\r\n    console.log(\"signin\")\r\n    \r\n    return (\r\n        <div className=\"auth-page\">\r\n            <div className=\"auth-box\">\r\n                <div className=\"auth-creds-sec\">\r\n                    <h1>Quiz And Poll App</h1>\r\n                    <h3>Welcome back ! Sign in to continue</h3>\r\n                    <form onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        loginUser(setErrorWord, history);\r\n                    }}>\r\n                        <input type=\"text\" id=\"email\" placeholder=\"Enter email\" className={(errorWord & 1 || errorWord & 4) ? \"invalid-input\" : \"\"} />\r\n                        <input type=\"password\" id=\"pss\" placeholder=\"Enter password\" className={(errorWord & 2 || errorWord & 8) ? \"invalid-input\" : \"\"} />\r\n                        <button type=\"submit\">Sign In</button>\r\n                    </form>\r\n\r\n                    <div className=\"error-messages\">\r\n                        {(errorWord !== 0) && displayErrorMessages(errorWord)}\r\n                    </div>\r\n                    \r\n                    <h3>Don't have an account ? <Link to=\"/signup\"> Sign Up </Link> </h3>\r\n\r\n                </div>\r\n\r\n                <div className=\"auth-anim-sec\">\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*************************Functions*********************** */\r\nfunction loginUser(setErrorWord, history)\r\n{\r\n    /*Validates the entered details and requests for auth token */\r\n\r\n    //Getting the entered details\r\n    const user = {\r\n        email : document.getElementById(\"email\").value.trim(),\r\n        pss : document.getElementById(\"pss\").value.trim()\r\n    }; \r\n    \r\n    //Validating the details\r\n    const errorWord = validateDetails(user);\r\n    if(errorWord !== 0)\r\n    {\r\n        setErrorWord(errorWord);\r\n        return;\r\n    }\r\n\r\n    //Getting jwt from backend\r\n    fetch(getTokenApiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({user})\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        \r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(!data.success)\r\n        {\r\n            switch(data.code)\r\n            {\r\n                case 1 : setErrorWord(3); break;\r\n                case 3 : setErrorWord(4); break;\r\n                case 4 : setErrorWord(8); break;\r\n                default : throw Error(data);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //Redirecting to home page\r\n            history.replace(\"/\");\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        setErrorWord(16);\r\n    })\r\n\r\n}\r\n\r\nfunction validateDetails(userDetails)\r\n{\r\n    /*Checks if the entered user details are valid*/\r\n\r\n    let errorWord = 0;\r\n\r\n    //Checking email\r\n    errorWord |= (userDetails.email.length === 0 || userDetails.email.search(emailRegex) === -1);\r\n\r\n    //Checking password\r\n    errorWord |= (userDetails.pss.length < 6) << 1;\r\n\r\n    return errorWord;\r\n}\r\n\r\nfunction displayErrorMessages(errorWord)\r\n{\r\n    /*Returns the error messages to be dislayed*/\r\n\r\n    const errors = [];\r\n\r\n    for(let i = 0; i < errorMessages.length; ++i)\r\n    {\r\n        if(errorWord & (1 << i))\r\n            errors.push((<h5 key={i} className=\"error-message\">{errorMessages[i]}</h5>));\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/*************************Exports*********************** */\r\nexport default SignIn;","\r\n/**********************************Imports*******************************/\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {apiBaseUrl} from \"../Config/Config\";\r\nimport { emailRegex, getCookies } from \"../Services/Services\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n/**********************************Variables*******************************/\r\nconst signupUrl = `${apiBaseUrl}/auth/signup`; //The api url for creating user account\r\nconst errorMessages = [\"Invalid email\", \"Password should be atleast 6 characters long\", \"Email already registered\", \"Failed to sign up. Try again\"]; //The possible error messages to be displayed\r\n\r\n/**********************************Component*******************************/\r\nfunction SignUp()\r\n{\r\n    const [errorWord, setErrorWord] = useState(0);\r\n    const history = useHistory();\r\n\r\n    //Checking if the user is already signed in\r\n    const setCookies = getCookies();\r\n    if(setCookies.has(\"auth\"))\r\n    {\r\n        //Redirecting to home page\r\n        history.replace(\"/\");\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"auth-page\">\r\n            <div className=\"auth-box\">\r\n                <div className=\"auth-creds-sec\">\r\n                    <h1>Quiz And Poll App</h1>\r\n                    <h3>Hey there ! Signup to start making you own quizes and polls</h3>\r\n\r\n                    <form onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        createUserAccount(setErrorWord, history);\r\n                    }}>\r\n                        <input type=\"text\" id=\"email\" placeholder=\"Enter email\" className={(errorWord & 1 || errorWord & 4) ? \"invalid-input\" : \"\"} />\r\n                        <input type=\"password\" id=\"pss\" placeholder=\"Enter password\" className={(errorWord & 2) ? \"invalid-input\" : \"\"} />\r\n                        <button type=\"submit\">Sign Up</button>\r\n                    </form>\r\n\r\n                    <div className=\"error-messages\">\r\n                        {(errorWord !== 0) && displayErrorMessages(errorWord)}\r\n                    </div>\r\n                    \r\n                    <h3>Already have an account ? <Link to=\"/signin\"> Sign In </Link> </h3>\r\n\r\n                </div>\r\n\r\n                <div className=\"auth-anim-sec\"> \r\n                    <h1>INSERT ANIMATION</h1>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**********************************Function*******************************/\r\nfunction createUserAccount(setErrorWord, history)\r\n{\r\n    /*Reads entered details and sends request to create user account */\r\n\r\n    //Getting the entered user details\r\n    const user = {\r\n        email : document.getElementById(\"email\").value.trim(),\r\n        pss : document.getElementById(\"pss\").value.trim()\r\n    };\r\n\r\n    //Checking if the entered details are valid\r\n    const errorWord = validateDetails(user);\r\n    if(errorWord !== 0)\r\n    {\r\n        setErrorWord(errorWord);\r\n        return;\r\n    }\r\n\r\n    //Sending the request to create new account\r\n    fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body : JSON.stringify({user})\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(!data.success)\r\n        {\r\n            switch(data.code)\r\n            {\r\n                case 1 : setErrorWord(3); break;\r\n                case 2 : setErrorWord(4); break;\r\n                default : throw Error(data);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //Redirecting to edit profile page\r\n            history.replace(\"/editprofile\");\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        setErrorWord(8);\r\n    });\r\n\r\n}\r\n\r\nfunction validateDetails(userDetails) \r\n{\r\n    /*Checks if the provided user details are valid */\r\n\r\n    let errorWord = 0; //The error word to keep track of the incorrect credentials\r\n\r\n    //Checking email length and format\r\n    errorWord |= (userDetails.email.length === 0 || userDetails.email.search(emailRegex) === -1);\r\n\r\n    //Checking the password length\r\n    errorWord |= (userDetails.pss.length < 6) << 1;\r\n\r\n    return errorWord;\r\n}\r\n\r\nfunction displayErrorMessages(errorWord)\r\n{\r\n    /*Returns the error messages to be dislayed*/\r\n\r\n    const errors = [];\r\n\r\n    for(let i = 0; i < errorMessages.length; ++i)\r\n    {\r\n        if(errorWord & (1 << i))\r\n            errors.push((<h5 key={i}>{errorMessages[i]}</h5>));\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/**********************************Exports*******************************/\r\nexport default SignUp;\r\n","\r\n/**********************Imports****************** */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n/**********************Slice****************** */\r\nconst userDetailsSlice = createSlice({\r\n    name: \"UserDetails\", \r\n    initialState: {\r\n        username: \"\",\r\n        bdate: {day: 1, month: 0, year: 2000},\r\n        followers: 0,\r\n        following: 0,\r\n        initialized: false,\r\n        profilePic: \"https://t4.ftcdn.net/jpg/02/14/74/61/360_F_214746128_31JkeaP6rU0NzzzdFC4khGkmqc8noe6h.jpg\",\r\n        polls : []\r\n    },\r\n    reducers: {\r\n        setUserDetails: setDetails,\r\n        setProfilePicture : setProfilePicUrl,\r\n        setPolls : setUserPolls\r\n    }\r\n})\r\n\r\n/**********************Functions****************** */\r\nfunction setDetails(state, action)\r\n{\r\n    /*Sets the user details state */\r\n\r\n    //Getting the action payload\r\n    const payload = action.payload;\r\n\r\n    //Setting the user details\r\n    state.username = payload.username;\r\n    state.bdate = {day: payload.bdate.day, month: payload.bdate.month, year: payload.bdate.year};\r\n    state.followers = payload.followers;\r\n    state.following = payload.following;\r\n    state.initialized = true;\r\n    if(payload.profilePicUrl)\r\n        state.profilePic = payload.profilePicUrl;\r\n}\r\n\r\nfunction setProfilePicUrl(state, action)\r\n{\r\n    /*Updates the user profile picture Url*/\r\n\r\n    state.profilePic = action.payload.profilePicUrl;\r\n}\r\n\r\nfunction setUserPolls(state, action)\r\n{\r\n    /*Saves the information about the polls created by the user */\r\n\r\n    //Clearing the previous user polls\r\n    state.polls.splice(0, state.polls.length);\r\n\r\n    //Adding the new polls\r\n    action.payload.userPolls.forEach((poll) => state.polls.push(poll));\r\n}\r\n\r\n/**********************Exports****************** */\r\nexport const {setUserDetails, setProfilePicture, setPolls} = userDetailsSlice.actions;\r\nexport default userDetailsSlice.reducer;","\r\n/******************************Imports**************************** */\r\nimport {apiBaseUrl} from \"../Config/Config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {setUserDetails, setProfilePicture} from \"../Redux/Slices/UserDetailsSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n/******************************Variables**************************** */\r\nconst getUserDetailsApiUrl = `${apiBaseUrl}/users/profile`; //The api url to get the user profile details\r\nconst editUserDetailsApiUrl = `${apiBaseUrl}/users/editprofile`; //The api url for editing the user profile details\r\n\r\n/******************************Component**************************** */\r\nfunction UserProfile()\r\n{\r\n    const userDetails = useSelector((state) => state.userDetails); //Getting the user details state from redux store\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [days, setDays] = useState(getDaysInMonth(userDetails.bdate.month, userDetails.bdate.year)); //The date state to ensure the proper number of day are displayed in the spinner\r\n    const [showLoadingSpinner, setShowLoadingSpinner] = useState(false); //Indicates whether the loading spinner should be displayed\r\n    const [profilePicUrl, setProfilePicUrl] = useState(userDetails.profilePic); //The profile pic url\r\n\r\n    //Loading the user details\r\n    useEffect(() => {\r\n        if(!userDetails.initialized)\r\n            loadUserData(dispatch)\r\n    },[]);\r\n\r\n    //Updating the user profile picture\r\n    useEffect(() => setProfilePicUrl(userDetails.profilePic), [userDetails.profilePic]);\r\n\r\n    //Creating function to display months of the year\r\n    const getMonths = () => {\r\n        const monthsNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n        return monthsNames.map((monthName, index) => (<option value={`${index}`} key={index}>{monthName}</option>));\r\n    };\r\n\r\n    //Creating a function to display the possible birth years\r\n    const getYears = () => {\r\n        const years = [];\r\n        const currYear = (new Date()).getFullYear();\r\n        for(let i = 1950; i <= currYear; ++i)\r\n        {\r\n            years.push(<option value={`${i}`} key={i}>{i}</option>);\r\n        }\r\n        return years;\r\n    };\r\n\r\n    //Function to changes in the number of days due to change in the selected month or year\r\n    const dateChanged = () => {\r\n        setDays(getDaysInMonth(parseInt(document.getElementById(\"bmonth\").value), parseInt(document.getElementById(\"byear\").value)));\r\n    };\r\n    \r\n    console.log(`userProfile`)\r\n    \r\n    return (\r\n        <div className=\"user-profile\">\r\n            <div className=\"profile-box\">\r\n                <div className=\"box-title-bar\" style={{alignSelf: \"stretch\"}}>\r\n                    <button onClick={() => history.push(\"/\")}>Home</button>\r\n                    <h1 style={{color: \"grey\"}}>Edit Profile</h1>\r\n                    <div />\r\n                </div>\r\n                \r\n                <img className=\"user-pic\" src={profilePicUrl} alt=\"pic\"/>\r\n                <input type=\"file\" id=\"profile_pic\" accept=\"image/jpeg\" onChange={(e) => setUserProfilePic(setProfilePicUrl, e)}/>\r\n                \r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    if(userDetails.initialized)\r\n                        updateUserData(userDetails, dispatch, setShowLoadingSpinner);\r\n                }}>\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" id=\"username\" defaultValue={userDetails.username}/>\r\n                    <label>Birthday</label>\r\n                    <div>\r\n                        <select id=\"bday\" key={userDetails.bdate.day} defaultValue={userDetails.bdate.day}>\r\n                            {days}\r\n                        </select>\r\n                        <select id=\"bmonth\" key={userDetails.bdate.month} defaultValue={userDetails.bdate.month} onChange={dateChanged}>\r\n                            {getMonths()}\r\n                        </select>\r\n                        <select id=\"byear\" key={userDetails.bdate.year} defaultValue={userDetails.bdate.year} onChange={dateChanged}>\r\n                            {getYears()}\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\">Save Details</button>\r\n                </form>\r\n                {showLoadingSpinner && <div className=\"loading-spinner\" />}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/******************************Functions**************************** */\r\nfunction getDaysInMonth(month, year)\r\n{\r\n    /*Returns the list of days in the given month of the given year */\r\n\r\n    const daysOptions = [];\r\n    const daysInMonth = (new Date(year, month+1, 0)).getDate();\r\n    for(let i = 1; i <= daysInMonth; ++i)\r\n    {\r\n        daysOptions.push(<option value={`${i}`} key={i}>{`${i}`}</option>);\r\n    }\r\n    return daysOptions;\r\n}\r\n\r\nfunction loadUserData(dispatch)\r\n{\r\n    /*Loads the user profile details*/ \r\n\r\n    //Getting the user profile details\r\n    fetch(getUserDetailsApiUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(!data.success)\r\n            throw Error(data.code);\r\n        \r\n        //Setting the user details\r\n        dispatch(setUserDetails({username: data.user.username, bdate: {day: data.user.bday, month: data.user.bmonth, year: data.user.byear}, followers: data.user.followers, following: data.user.following, profilePicUrl : data.user.picUrl}));\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Failed to load user details\");\r\n    })\r\n\r\n}\r\n\r\nfunction setUserProfilePic(setProfilePicUrl, event)\r\n{\r\n    /*Sets the user profile picture */\r\n\r\n    //Getting the profile pic url\r\n    if(event.target.files && event.target.files[0]) //Checking if a file has been uploaded\r\n        setProfilePicUrl(URL.createObjectURL(event.target.files[0]));\r\n    \r\n}\r\n\r\nfunction updateUserData(oldDetails, dispatch, setShowLoadingSpinner)\r\n{\r\n    /*Validates user data and sends request to save it*/\r\n\r\n    //Displaying the loading spinner\r\n    setShowLoadingSpinner(true);\r\n\r\n    //Getting the entered data\r\n    const userDetails = {\r\n        username: document.getElementById(\"username\").value.trim(),\r\n        bday: parseInt(document.getElementById(\"bday\").value),\r\n        bmonth: parseInt(document.getElementById(\"bmonth\").value),\r\n        byear: parseInt(document.getElementById(\"byear\").value)\r\n    };\r\n    //Adding the profile pic url\r\n    const picInput = document.getElementById(\"profile_pic\");\r\n    console.log(picInput.files)\r\n    if(picInput.files && picInput.files[0])\r\n        userDetails.profilePic = picInput.files[0];\r\n    console.log(userDetails)\r\n    \r\n    //Validating the user details\r\n    if(validateUserDetails(userDetails))\r\n    {\r\n        //Creating the form data\r\n        const formData = new FormData();\r\n        \r\n        //Removing the unchanged details\r\n        if(oldDetails.username !== userDetails.username)\r\n            formData.append(\"username\", userDetails.username);\r\n        if(oldDetails.bdate.day !== userDetails.bday)\r\n            formData.append(\"bday\", userDetails.bday);\r\n        if(oldDetails.bdate.month !== userDetails.bmonth)\r\n            formData.append(\"bmonth\", userDetails.bmonth);\r\n        if(oldDetails.bdate.year !== userDetails.byear)\r\n            formData.append(\"byear\", userDetails.byear);\r\n        if(userDetails.profilePic)\r\n            formData.append(\"profilePic\", userDetails.profilePic);\r\n        \r\n        \r\n        //Sending request to update user details\r\n        fetch(editUserDetailsApiUrl, {\r\n            method: \"PUT\",\r\n            credentials: \"include\",\r\n            body: formData\r\n        })\r\n        .then((resp) => {\r\n            if(resp.status !== 200)\r\n                throw Error(resp.status);\r\n            return resp.json();\r\n        })\r\n        .then((data) => {\r\n            if(!data.success)\r\n                throw Error(data);\r\n\r\n            //Updating the user details state\r\n            const updatedDetails = {\r\n                username: userDetails.username ? userDetails.username : oldDetails.username,\r\n                bdate : {\r\n                    day: userDetails.bday ? userDetails.bday : oldDetails.bdate.day, \r\n                    month: userDetails.bmonth ? userDetails.bmonth : oldDetails.bdate.month,\r\n                    year: userDetails.byear ? userDetails.byear : oldDetails.bdate.year,\r\n                },\r\n                followers: oldDetails.followers,\r\n                following: oldDetails.following,\r\n            };\r\n            dispatch(setUserDetails(updatedDetails));\r\n            setShowLoadingSpinner(false);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n            setShowLoadingSpinner(false);\r\n        })\r\n    }\r\n    else\r\n        alert(\"Username cannot be empty\");\r\n    \r\n}\r\n\r\nfunction validateUserDetails(userDetails)\r\n{\r\n    /*Checks if the entered user details are valid */\r\n\r\n    return (userDetails.username.length > 0);\r\n}\r\n\r\n/******************************Exports**************************** */\r\nexport default UserProfile;\r\nexport {loadUserData};","\r\n/****************************Imports*********************** */\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {loadUserData} from \"../Components/UserProfile\";\r\nimport { apiBaseUrl } from \"../Config/Config\";\r\nimport { setPolls } from \"../Redux/Slices/UserDetailsSlice\";\r\nimport {getCookies} from \"../Services/Services\";\r\n\r\n/****************************Variables************************/\r\nconst getUserPollsApiUrl = `${apiBaseUrl}/content/userpolls`; //The api url to get the polls created by the current user \r\nconst signOutApiUrl = `${apiBaseUrl}/auth/signout`; //The api url to sign out the user\r\n\r\n/****************************Component************************/\r\nfunction Home()\r\n{\r\n    \r\n    const userDetails = useSelector((state) => state.userDetails); //The user details\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    //Checking if the user has signed in\r\n    const cookies = getCookies();\r\n    if(!cookies.has(\"auth\"))\r\n        history.replace(\"/signin\"); //Redirecting to signin page\r\n\r\n    //Loading user data\r\n    useEffect(() => {\r\n        if(cookies.has(\"auth\"))\r\n        {\r\n            //Loading the user details\r\n            if(!userDetails.initialized)\r\n                loadUserData(dispatch);\r\n            \r\n            //Loading the user polls\r\n            loadUserPolls(dispatch)\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"Home\")\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <SideBar history={history}/>\r\n            <div className=\"dashboard\">\r\n                <TopBar userDetails={userDetails} history={history}/>\r\n                <div className=\"user-polls-list\">\r\n                    <ContentList title={`${userDetails.username}'s Polls`}>\r\n                        {userDetails.polls && <UserPollsTable userPolls={userDetails.polls} history={history}/>}\r\n                    </ContentList>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SideBar({history})\r\n{\r\n    \r\n    return (\r\n        <div className=\"side-nav-bar\">\r\n            <button onClick={() => history.push(\"/newpoll\")}>Create New Poll</button>\r\n            <button onClick={() => history.push(\"/editprofile\")}>Edit Profile</button>\r\n            <button onClick={() => signoutUser(history)}>Log out</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TopBar(props)\r\n{\r\n    const userDetails = props.userDetails;\r\n    const history = props.history;\r\n\r\n    return (\r\n        <div className=\"top-bar\">\r\n            <div style={{flexBasis: \"70%\", flexGrow: \"2\"}}></div>\r\n            {userDetails.initialized && <div className=\"profile-details\">\r\n                <h3>{userDetails.username}</h3>\r\n                <img className=\"user-pic\" src={userDetails.profilePic} onClick={() => history.push(\"/editprofile\")}></img>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ContentList(props)\r\n{\r\n\r\n    return(\r\n        <div className=\"content-list\">\r\n            <div className=\"content-list-title\">\r\n                <h3>{props.title}</h3>\r\n            </div>\r\n            <div className=\"content-list-content\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserPollsTable(props)\r\n{\r\n\r\n    const displayPollDetails = () => {\r\n        const pollDetails = [];\r\n        props.userPolls.forEach((poll) => {\r\n            pollDetails.push(<button onClick={() => props.history.push(`/poll/${poll.id}`)}>{poll.name}</button>);\r\n            pollDetails.push(<h3>{`${poll.votes} votes`}</h3>)\r\n        });\r\n        return pollDetails;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"user-polls-table\">\r\n            <div className=\"user-polls-headers\">\r\n                <h2 style={{borderRight: \"2px solid white\"}}>Poll Tile</h2>\r\n                <h2>Vote Counts</h2>\r\n            </div>        \r\n            <div className=\"user-polls-grid\">\r\n                {displayPollDetails()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/****************************Functions*********************** */\r\nfunction loadUserPolls(dispatch)\r\n{\r\n    /*Loads info about the polls created by the user  */\r\n\r\n    fetch(getUserPollsApiUrl, {\r\n        method: \"GET\",\r\n        credentials: \"include\"\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        \r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(data.success)\r\n            dispatch(setPolls({userPolls: data.polls}));\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nfunction signoutUser(history)\r\n{\r\n    /*Signs out the user */\r\n\r\n    fetch(signOutApiUrl, {\r\n        method: \"GET\",\r\n        credentials: \"include\"\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp);\r\n        history.replace(\"/signin\");\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Failed to sign out. Try again\");\r\n    });\r\n}\r\n\r\n/****************************Exports*********************** */\r\nexport default Home;","/******************************Imports**************************** */\r\nimport {useState} from \"react\";\r\nimport {FcDeleteRow, FcAddRow} from \"react-icons/fc\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {apiBaseUrl} from \"../Config/Config\";\r\n\r\n/******************************Variables**************************** */\r\nlet newOptionId = 0; //The id for new option. Its unique for each option\r\nconst createNewPollApiUrl = `${apiBaseUrl}/content/createpoll`; //The api url to create new poll\r\nconst errorMessages = [\"Poll title cannot be empty\", \"Poll should have atleast one non-empty option\", \"Failed to create new poll\"];\r\nlet pollCreationSemaphore = false; //A semaphore to prevent multiple clicks of create poll button\r\n\r\n/******************************Components**************************** */\r\nfunction NewPoll()\r\n{\r\n    const [options, setOptions] = useState([]); //The poll options\r\n    const [resStatus, setResStatus] = useState([0,false]); //Result status. resStatus[0] = errorWord and resStatus[1] indicates whether to show loading spinner\r\n    const history = useHistory();\r\n\r\n    console.log(\"New Poll\")\r\n\r\n    return(\r\n        <div className=\"new-poll\">\r\n            <div className=\"new-poll-box\">\r\n                <div className=\"box-title-bar\">\r\n                    <button onClick={() => history.push(\"/\")}>Home</button>\r\n                    <h1>New Poll</h1>\r\n                    <div />\r\n                </div>\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                }}>\r\n                    <input type=\"text\" id=\"poll_title\" placeholder=\"Enter Question\" className={(resStatus[0] & 1) ? \"invalid-input\" : \"\"}/>\r\n                    <div>\r\n                        {options.map((option) => <NewPollOption key={option.id} option={option} options={options} setOptions={setOptions}/>)}\r\n                    </div>\r\n                    <div id=\"new-option-btn-container\">\r\n                        <button id=\"new-option-btn\" onClick={() => addNewOption(options, setOptions)}> <FcAddRow size={40}/> </button>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" onClick={() => {\r\n                            console.log(pollCreationSemaphore)\r\n                            if(!pollCreationSemaphore)\r\n                            {\r\n                                pollCreationSemaphore = true;\r\n                                createNewPoll(options, setResStatus, history)\r\n                            }\r\n                        }}>Create Poll</button>\r\n                </form>\r\n\r\n                <div className=\"error-messages\">\r\n                    {resStatus[1] && <div className=\"loading-spinner\" style={{margin: \"auto\"}}/> }\r\n                    {(resStatus[0] !== 0) && getErrorMessages(resStatus[0])}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NewPollOption(props)\r\n{\r\n    const option = props.option;\r\n\r\n    return (\r\n        <div className=\"new-poll-option\">\r\n            <input type=\"text\" onChange={(e) => option.txt= e.target.value} placeholder={option.txt.length ? option.txt : \"Enter new option\"} style={{flexBasis: \"90%\", flexGrow: \"2\"}}/>\r\n            <button onClick={() => deleteOption(option, props.options, props.setOptions)}>\r\n                <FcDeleteRow size={40}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n/******************************Functions**************************** */\r\nfunction addNewOption(options, setOptions)\r\n{\r\n    /*Adds a new blank option to the options list*/\r\n\r\n    const newOptions = [];\r\n    options.forEach((option) => {\r\n        newOptions.push({id: option.id, txt: option.txt})\r\n    });\r\n    newOptions.push({id: newOptionId, txt: \"\"});\r\n    newOptionId++;\r\n\r\n    setOptions(newOptions);\r\n}\r\n\r\nfunction deleteOption(option, options, setOptions)\r\n{\r\n    /*Deletes the given option*/\r\n\r\n    const newOptions = [];\r\n    options.forEach((opt) => {\r\n        if(opt.id !== option.id)\r\n            newOptions.push(opt);\r\n    });\r\n\r\n    setOptions(newOptions);\r\n}\r\n\r\nfunction createNewPoll(opts, setResStaus, history)\r\n{\r\n    /*Creates the new poll */\r\n\r\n    //Creating the new poll object\r\n    const newPoll = {\r\n        name: document.getElementById(\"poll_title\").value.trim(),\r\n        options : (() => {\r\n            const nonEmptyOptions = [];\r\n            let optionTxt;\r\n            opts.forEach((option) => {\r\n                optionTxt = option.txt.trim();\r\n                if(optionTxt.length !== 0)\r\n                    nonEmptyOptions.push(optionTxt);\r\n            });\r\n            return nonEmptyOptions;\r\n        })()\r\n    }; \r\n    console.log(newPoll)\r\n\r\n    //Checking if entered details are valid\r\n    const errorWord = validatePollDetails(newPoll);\r\n    if(errorWord === 0)\r\n    {\r\n        //Displaying loading spinner\r\n        setResStaus([0, true]);\r\n\r\n        //Sending request to create new poll\r\n        fetch(createNewPollApiUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify({poll:newPoll})\r\n        })\r\n        .then((resp) => {\r\n            if(resp.status !== 200)\r\n                throw Error(resp.status);\r\n            return resp.json();\r\n        })\r\n        .then((data) => {\r\n            if(!data.success)\r\n            {\r\n                setResStaus([3, false]);\r\n                return;\r\n            }\r\n            else\r\n            {\r\n               //Redirecting to poll page\r\n                history.replace(`/poll/${data.pollId}`);\r\n                return;\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            setResStaus([4, false]);\r\n        })\r\n        .finally(() => pollCreationSemaphore = false)\r\n    }\r\n    else\r\n        setResStaus([errorWord, false]);\r\n\r\n}\r\n\r\nfunction validatePollDetails(poll)\r\n{\r\n    /*Checks if the entered poll details are valid */\r\n\r\n    let errorWord = 0; //The error word to indicate the errors\r\n    \r\n    //Checking poll title\r\n    errorWord |= (poll.name.length === 0);\r\n\r\n    //Checking the poll options\r\n    errorWord |= (poll.options.length === 0) << 1;\r\n\r\n    return errorWord;\r\n}\r\n\r\nfunction getErrorMessages(errorWord)\r\n{\r\n    /*Returns the error messages to be displayed */\r\n\r\n    const errors = [];\r\n    for(let i = 0; i < errorMessages.length; ++i)\r\n    {\r\n        if(errorWord & (1 << i))\r\n            errors.push(<h5 key={i} className=\"error-message\">{errorMessages[i]}</h5>);\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/******************************Exports**************************** */\r\nexport default NewPoll;","/******************************Imports**************************** */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {apiBaseUrl} from \"../Config/Config\";\r\nimport {getCookies} from \"../Services/Services\";\r\n\r\n/******************************Variables**************************** */\r\nconst getPollApiBaseUrl = `${apiBaseUrl}/content/poll`; //The base url for the get poll request\r\nconst addVoteApiUrl = `${apiBaseUrl}/content/poll/vote`; //The api url to add the user's vote in the poll\r\nlet pollId; //The id of the current poll\r\nlet voted = undefined; //Indicates if the user has voted in the given poll\r\n\r\n/******************************Components**************************** */\r\nfunction Poll()\r\n{\r\n    pollId = useParams().pollId; //The id of the poll to be displayed\r\n    const [poll, setPoll] = useState(null); //The poll data to be displayed\r\n    const history = useHistory();\r\n\r\n    //Getting the poll details\r\n    useEffect(() => getPoll(pollId, setPoll), []);\r\n\r\n    console.log(\"Poll\")\r\n\r\n    return (\r\n        <div className=\"poll\">\r\n            <div className=\"poll-box\">\r\n                <div className=\"box-title-bar\" style={{flexBasis: \"10%\", flexGrow: 1}}>\r\n                    <button onClick={() => history.push(\"/\")}>Home</button>\r\n                    <h1>{(poll && poll.name.length) ? poll.name : \"Loading\"}</h1>\r\n                    <button onClick={copyShareableLink}>Share</button>\r\n                </div>\r\n\r\n                <div className=\"poll-results\">\r\n                    {poll && <PollGraph options={poll.options}/>}\r\n                </div>\r\n\r\n                <div className=\"poll-choices\">\r\n                    {poll && poll.options.map((option) => {\r\n                        return(\r\n                            <button key={option.id} class=\"poll-option-btn\" disabled={voted} onClick={() => {\r\n                                addUserVote(option.id,poll, setPoll);\r\n                            }} style={{backgroundColor: (voted !== undefined ? (option.id === voted ? \"var(--bg-gradient-end)\" : \"grey\") : \"\")}}>{option.txt}</button>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PollGraph(props)\r\n{\r\n    const options = props.options;\r\n    const graphColors = [\"#d61609\", \"#f5ed07\", \"#39d10f\", \"#0f4fd1\"]; //The colors to be used for the bar graphs\r\n\r\n    //Calculating total votes\r\n    let totalVotes = 0;\r\n    options.forEach((option) => totalVotes += option.votes);\r\n    totalVotes = Math.max(totalVotes, 1);\r\n\r\n    //Calculating percentage votes for each option\r\n    for(let i = 0; i < options.length; ++i)\r\n    {\r\n        options[i].percentage = options[i].votes * 100 / totalVotes;\r\n    }\r\n\r\n    //Returns the style to be used for bar with given percentage value\r\n    const getBarStyle = (percentage, index) => {\r\n        return {\r\n            flexBasis: `${percentage}%`,\r\n            backgroundColor: graphColors[(index % graphColors.length)],\r\n            color: \"white\",\r\n            display: \"flex\"\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"poll-graph\">\r\n            {options.map((option, index) => {\r\n                return (\r\n                    <div className=\"poll-graph-bar\" key={option.id}>\r\n                        <div style={getBarStyle(option.percentage, index)}>\r\n                            <h5 style={{textAlign: \"center\", alignSelf: \"center\", flexGrow: 1}}>{Math.floor(option.percentage)}%</h5>\r\n                        </div>\r\n                        <h5 style={{textAlign: \"center\", marginTop: 2, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}>{option.txt}</h5>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n/******************************Functions**************************** */\r\nfunction getPoll(pollId, setPoll)\r\n{\r\n    /*Fetches the data for the poll with the given id */\r\n\r\n    //Creating the url\r\n    const requestUrl = `${getPollApiBaseUrl}/${pollId}`;\r\n\r\n    //Fetching the poll data\r\n    fetch(requestUrl, {\r\n        method: \"GET\",\r\n        credentials: \"include\"\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(!data.success)\r\n            console.log(data)\r\n        else\r\n        {\r\n            if(data.userVoted !== -1)\r\n                voted = data.userVoted;\r\n\r\n            setPoll(data.poll);\r\n            return;\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Failed to load poll\");\r\n    })\r\n\r\n}\r\n\r\nfunction addUserVote(voteId, polls, setPolls)\r\n{\r\n    /*Adds the user's vote to the poll */\r\n\r\n    //Sending request to vote\r\n    fetch(addVoteApiUrl, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({pollId, voteId})\r\n    })\r\n    .then((resp) => {\r\n        if(resp.status !== 200)\r\n            throw Error(resp.status);\r\n        return resp.json();\r\n    })\r\n    .then((data) => {\r\n        if(!data.success)\r\n            throw Error(data.code);\r\n\r\n        voted = voteId;\r\n        \r\n        //Updating the polls\r\n        const newPoll = {...polls};\r\n        newPoll.options[voteId].votes++;\r\n        setPolls(newPoll);\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Failed to vote\");\r\n        voteId = null;\r\n    });\r\n\r\n}\r\n\r\nfunction copyShareableLink()\r\n{\r\n    /*Copies the page url for sharing*/\r\n\r\n    //Getting the page url\r\n    const pageUrl = window.location.href;\r\n\r\n    //Saving url to clipboard\r\n    const el = document.createElement('input');\r\n    el.value = pageUrl;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n\r\n}\r\n\r\n/******************************Exports**************************** */\r\nexport default Poll;","\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport SignIn from \"./Components/SignIn\";\nimport SignUp from \"./Components/Signup\";\nimport UserProfile from \"./Components/UserProfile\";\nimport Home from \"./Components/Home\";\nimport NewPoll from \"./Components/NewPoll\";\nimport Poll from \"./Components/Poll\";\n\nfunction App() \n{\n\n  return (\n    <Router>\n      <div className=\"App\">\n      \n        <Switch>\n        \n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n\n          <Route exact path=\"/signin\">\n            <SignIn />\n          </Route>\n\n          <Route exact path=\"/editprofile\">\n            <UserProfile />\n          </Route>\n\n          <Route exact path=\"/newpoll\">\n            <NewPoll />\n          </Route>\n\n          <Route path=\"/poll/:pollId\">\n            <Poll />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","\r\n/**********************Imports****************** */\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport UserDetailsReducer from \"./Slices/UserDetailsSlice\";\r\n\r\n/**********************Variables****************** */\r\nconst store = configureStore({\r\n    reducer: {\r\n        userDetails : UserDetailsReducer \r\n    }\r\n})\r\n\r\n/**********************Exports****************** */\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport Store from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}